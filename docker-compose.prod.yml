services:
  api:
    # Use local build for testing
    build:
      context: .
      dockerfile: backend/Dockerfile.prod
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - ALEMBIC_DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0
      - CELERY_BROKER_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0
      - CELERY_RESULT_BACKEND=redis://${REDIS_HOST}:${REDIS_PORT}/0
      - REDBEAT_REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/1
      - REDBEAT_LOCK_KEY=${REDBEAT_LOCK_KEY}
      - REDBEAT_LOCK_TIMEOUT=${REDBEAT_LOCK_TIMEOUT}
      - TZ=${TZ}
      - UVICORN_LOG_LEVEL=${LOG_LEVEL:-INFO}
      - UVICORN_ACCESS_LOG=false
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - turftrack_network

  frontend:
    # Use local build for testing
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    env_file:
      - .env
    ports:
      - "3000:3000" # Expose on port 3000 for Nginx Proxy Manager
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - NODE_ENV=${NODE_ENV}
      - VITE_API_URL=${VITE_API_URL}
    depends_on:
      api:
        condition: service_started
    networks:
      - turftrack_network

  celery_worker:
    # Use local build for testing
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    command: worker
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - ENVIRONMENT=production
      - CELERY_LOG_LEVEL=${CELERY_LOG_LEVEL}
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - ALEMBIC_DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0
      - CELERY_BROKER_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0
      - CELERY_RESULT_BACKEND=redis://${REDIS_HOST}:${REDIS_PORT}/0
      - REDBEAT_REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/1
      - REDBEAT_LOCK_KEY=${REDBEAT_LOCK_KEY}
      - REDBEAT_LOCK_TIMEOUT=${REDBEAT_LOCK_TIMEOUT}
      - TZ=${TZ}
    depends_on:
      - redis
      - db
    networks:
      - turftrack_network

  celery_beat:
    # Use local build for testing
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    command: beat
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - ENVIRONMENT=production
      - CELERY_LOG_LEVEL=${CELERY_LOG_LEVEL}
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - ALEMBIC_DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0
      - REDBEAT_REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/1
      - REDBEAT_LOCK_KEY=${REDBEAT_LOCK_KEY}
      - REDBEAT_LOCK_TIMEOUT=${REDBEAT_LOCK_TIMEOUT}
      - CELERY_BROKER_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0
      - CELERY_RESULT_BACKEND=redis://${REDIS_HOST}:${REDIS_PORT}/0
      - TZ=${TZ}
    depends_on:
      - redis
      - celery_worker
      - db
    networks:
      - turftrack_network

networks:
  turftrack_network:
    external: true
