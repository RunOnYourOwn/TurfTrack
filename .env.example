# =================================================================
# ==           TurfTrack Application Configuration             ==
# =================================================================
#
# --- Instructions ---
# 1. Copy this file to a new file named '.env' in the project root.
# 2. Fill in the values for your production environment.
# 3. DO NOT commit the .env file to version control.
#
# =================================================================

# --- Application Settings ---
# The Fully Qualified Domain Name (FQDN) where the app will be hosted.
# This is crucial for CORS to work correctly.
# Example: APP_FQDN=turftrack.yourdomain.com
APP_FQDN=localhost

# Application name and environment settings
APP_NAME=TurfTrack
ENVIRONMENT=production
DEBUG=true
API_V1_PREFIX=/api/v1
LOG_LEVEL=INFO
TZ=America/New_York

# --- Database Configuration ---
# Alembic database URL for migrations (local development)
ALEMBIC_DATABASE_URL=postgresql+asyncpg://postgres:your_password@localhost:5432/turftrack

# CORS origins for frontend access
BACKEND_CORS_ORIGINS=["http://localhost:5173"]

# --- PostgreSQL Database Settings ---
# These variables will be used to construct the DATABASE_URL.
POSTGRES_SERVER=db
POSTGRES_HOST=db
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_secure_password_here
POSTGRES_DB=turftrack
POSTGRES_PORT=5432

# Full database URL for the application
DATABASE_URL=postgresql+asyncpg://postgres:your_secure_password_here@db:5432/turftrack

# --- Redis Settings ---
# These variables will be used to construct the REDIS_URL.
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_URL=redis://redis:6379/0

# --- Celery Settings ---
CELERY_LOG_LEVEL=INFO
REDBEAT_LOCK_KEY=redbeat:lock
REDBEAT_LOCK_TIMEOUT=900
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0
REDBEAT_REDIS_URL=redis://redis:6379/0

# --- Frontend Settings ---
# Defines the build mode for the frontend container.
NODE_ENV=production
# The base path for the API. The frontend will make requests to this path.
# Your Nginx Proxy Manager should route requests from /api to the backend.
VITE_API_URL=/api
