"""Add ondelete=CASCADE to all foreign keys

Revision ID: db752b3a9d17
Revises: 4f48560bc4f9
Create Date: 2025-06-21 01:09:02.543491

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'db752b3a9d17'
down_revision: Union[str, None] = '4f48560bc4f9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('daily_weather_location_id_fkey'), 'daily_weather', type_='foreignkey')
    op.create_foreign_key(None, 'daily_weather', 'locations', ['location_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_gdd_model_parameters_effective_from'), table_name='gdd_model_parameters')
    op.drop_index(op.f('ix_gdd_model_parameters_gdd_model_id'), table_name='gdd_model_parameters')
    op.drop_constraint(op.f('gdd_model_parameters_gdd_model_id_fkey'), 'gdd_model_parameters', type_='foreignkey')
    op.create_foreign_key(None, 'gdd_model_parameters', 'gdd_models', ['gdd_model_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('gdd_models_lawn_id_fkey'), 'gdd_models', type_='foreignkey')
    op.create_foreign_key(None, 'gdd_models', 'lawns', ['lawn_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('gdd_resets_gdd_model_id_fkey'), 'gdd_resets', type_='foreignkey')
    op.create_foreign_key(None, 'gdd_resets', 'gdd_models', ['gdd_model_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('gdd_values_gdd_model_id_fkey'), 'gdd_values', type_='foreignkey')
    op.create_foreign_key(None, 'gdd_values', 'gdd_models', ['gdd_model_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('lawns_location_id_fkey'), 'lawns', type_='foreignkey')
    op.create_foreign_key(None, 'lawns', 'locations', ['location_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('task_status_related_lawn_id_fkey'), 'task_status', type_='foreignkey')
    op.drop_constraint(op.f('task_status_related_location_id_fkey'), 'task_status', type_='foreignkey')
    op.create_foreign_key(None, 'task_status', 'lawns', ['related_lawn_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'task_status', 'locations', ['related_location_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'task_status', type_='foreignkey')
    op.drop_constraint(None, 'task_status', type_='foreignkey')
    op.create_foreign_key(op.f('task_status_related_location_id_fkey'), 'task_status', 'locations', ['related_location_id'], ['id'])
    op.create_foreign_key(op.f('task_status_related_lawn_id_fkey'), 'task_status', 'lawns', ['related_lawn_id'], ['id'])
    op.drop_constraint(None, 'lawns', type_='foreignkey')
    op.create_foreign_key(op.f('lawns_location_id_fkey'), 'lawns', 'locations', ['location_id'], ['id'])
    op.drop_constraint(None, 'gdd_values', type_='foreignkey')
    op.create_foreign_key(op.f('gdd_values_gdd_model_id_fkey'), 'gdd_values', 'gdd_models', ['gdd_model_id'], ['id'])
    op.drop_constraint(None, 'gdd_resets', type_='foreignkey')
    op.create_foreign_key(op.f('gdd_resets_gdd_model_id_fkey'), 'gdd_resets', 'gdd_models', ['gdd_model_id'], ['id'])
    op.drop_constraint(None, 'gdd_models', type_='foreignkey')
    op.create_foreign_key(op.f('gdd_models_lawn_id_fkey'), 'gdd_models', 'lawns', ['lawn_id'], ['id'])
    op.drop_constraint(None, 'gdd_model_parameters', type_='foreignkey')
    op.create_foreign_key(op.f('gdd_model_parameters_gdd_model_id_fkey'), 'gdd_model_parameters', 'gdd_models', ['gdd_model_id'], ['id'])
    op.create_index(op.f('ix_gdd_model_parameters_gdd_model_id'), 'gdd_model_parameters', ['gdd_model_id'], unique=False)
    op.create_index(op.f('ix_gdd_model_parameters_effective_from'), 'gdd_model_parameters', ['effective_from'], unique=False)
    op.drop_constraint(None, 'daily_weather', type_='foreignkey')
    op.create_foreign_key(op.f('daily_weather_location_id_fkey'), 'daily_weather', 'locations', ['location_id'], ['id'])
    # ### end Alembic commands ###
