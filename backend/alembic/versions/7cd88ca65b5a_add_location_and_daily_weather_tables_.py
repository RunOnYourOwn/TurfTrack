"""add location and daily_weather tables, update lawn to use location_id

Revision ID: 7cd88ca65b5a
Revises: 3d23cab330cc
Create Date: 2025-06-09 14:56:42.749214

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7cd88ca65b5a'
down_revision: Union[str, None] = '3d23cab330cc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('latitude', 'longitude', name='uix_lat_lon')
    )
    op.create_table('daily_weather',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('historical', 'forecast', name='weathertype'), nullable=False),
    sa.Column('temperature_max_c', sa.Float(), nullable=False),
    sa.Column('temperature_max_f', sa.Float(), nullable=False),
    sa.Column('temperature_min_c', sa.Float(), nullable=False),
    sa.Column('temperature_min_f', sa.Float(), nullable=False),
    sa.Column('precipitation_mm', sa.Float(), nullable=False),
    sa.Column('precipitation_in', sa.Float(), nullable=False),
    sa.Column('precipitation_probability_max', sa.Float(), nullable=False),
    sa.Column('wind_speed_max_ms', sa.Float(), nullable=False),
    sa.Column('wind_speed_max_mph', sa.Float(), nullable=False),
    sa.Column('wind_gusts_max_ms', sa.Float(), nullable=False),
    sa.Column('wind_gusts_max_mph', sa.Float(), nullable=False),
    sa.Column('wind_direction_dominant_deg', sa.Float(), nullable=False),
    sa.Column('et0_evapotranspiration_mm', sa.Float(), nullable=False),
    sa.Column('et0_evapotranspiration_in', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date', 'location_id', 'type', name='uix_date_location_type')
    )
    op.add_column('lawns', sa.Column('location_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'lawns', 'locations', ['location_id'], ['id'])
    op.drop_column('lawns', 'latitude')
    op.drop_column('lawns', 'longitude')
    op.drop_column('lawns', 'location')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('lawns', sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('lawns', sa.Column('longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('lawns', sa.Column('latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'lawns', type_='foreignkey')
    op.drop_column('lawns', 'location_id')
    op.drop_table('daily_weather')
    op.drop_table('locations')
    # ### end Alembic commands ###
