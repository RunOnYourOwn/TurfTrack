"""add_weed_pressure_tables

Revision ID: 66e2fcb24857
Revises: e2dd6106e27e
Create Date: 2025-07-17 21:24:21.360273

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '66e2fcb24857'
down_revision: Union[str, None] = 'e2dd6106e27e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('weed_species',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('common_name', sa.String(length=100), nullable=False),
    sa.Column('gdd_base_temp_c', sa.Float(), nullable=False),
    sa.Column('gdd_threshold_emergence', sa.Float(), nullable=False),
    sa.Column('optimal_soil_temp_min_c', sa.Float(), nullable=False),
    sa.Column('optimal_soil_temp_max_c', sa.Float(), nullable=False),
    sa.Column('moisture_preference', sa.Enum('low', 'medium', 'high', name='moisturepreference'), nullable=False),
    sa.Column('season', sa.Enum('spring', 'summer', 'fall', 'year_round', name='weedseason'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('weed_pressure',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('weed_species_id', sa.Integer(), nullable=False),
    sa.Column('weed_pressure_score', sa.Float(), nullable=False),
    sa.Column('gdd_risk_score', sa.Float(), nullable=False),
    sa.Column('soil_temp_risk_score', sa.Float(), nullable=False),
    sa.Column('moisture_risk_score', sa.Float(), nullable=False),
    sa.Column('turf_stress_score', sa.Float(), nullable=False),
    sa.Column('seasonal_timing_score', sa.Float(), nullable=False),
    sa.Column('gdd_accumulated', sa.Float(), nullable=False),
    sa.Column('soil_temp_estimate_c', sa.Float(), nullable=False),
    sa.Column('precipitation_3day_mm', sa.Float(), nullable=False),
    sa.Column('humidity_avg', sa.Float(), nullable=False),
    sa.Column('et0_mm', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['weed_species_id'], ['weed_species.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('location_id', 'date', 'weed_species_id', name='uix_location_date_species')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('weed_pressure')
    op.drop_table('weed_species')
    # ### end Alembic commands ###
