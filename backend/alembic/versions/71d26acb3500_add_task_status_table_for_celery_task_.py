"""add task_status table for celery task monitoring

Revision ID: 71d26acb3500
Revises: 7cd88ca65b5a
Create Date: 2025-06-09 21:29:41.461913

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "71d26acb3500"
down_revision: Union[str, None] = "7cd88ca65b5a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "task_status",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.String(), nullable=False),
        sa.Column("task_name", sa.String(), nullable=False),
        sa.Column("related_location_id", sa.Integer(), nullable=True),
        sa.Column("related_lawn_id", sa.Integer(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("pending", "started", "success", "failure", name="taskstatusenum"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("finished_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("result", sa.Text(), nullable=True),
        sa.Column("error", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["related_lawn_id"],
            ["lawns.id"],
        ),
        sa.ForeignKeyConstraint(
            ["related_location_id"],
            ["locations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("task_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("task_status")
    # ### end Alembic commands ###
